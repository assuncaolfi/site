{
  "hash": "9cc4cfb6ae5762cd6d94f058491118d6",
  "result": {
    "markdown": "---\ntitle: Decomposable non-monotonic models\ndate: 2023-11-17\ncategories: [causal, cognitive, modeling]\n---\n\n::: {.callout-warning}\nThis post is a work in progress.\n:::\n\nRecently, I helped design an experiment measuring a binary response against a\ncontinuous delay time. If the user did not do the thing at time zero, then we\ndelayed for a variable number of minutes before reminding them to do it. This\ndelay had a non-monotonic relationship to the response: as the delay increased,\nthe response responded differently. Initially, the response increased; then it\npeaked; and finally it decreased.\n\nCausally, we may decompose this process into two: assuming the user forgot to/\ncould not do the thing at the time, as the delay increases, they  1) become\nmore available for and 2) lose interest in doing the thing. This is a common\nphenomena in different time-based scenarios. In sports, the \"aging curve\" refers\nto how a player's performance increases with age, then decreases. As the player\ngets older, they get 1) better at the sport and 2) physically weaker.\n\nAndrew Gelman wrote about this a couple of times in his blog: see \n[this post from 2018](https://statmodeling.stat.columbia.edu/2018/09/07/bothered-non-monotonicity-heres-one-quick-trick-make-happy/)\nand [this one from 2023](https://statmodeling.stat.columbia.edu/2023/01/01/how-to-model-a-non-monotonic-relation/),\nas well as their comments, which also informed this post. Gelman proposed\nmodeling these processes with:\n\n$$g(x) = g_1(x) + g_2(x),$$\n\nwhere  \n$g_1(x)$ is a monotonically increasing function with a right asymptote; and  \n$g_2(x)$ is a monotonically decreasing function with a left asymptote.\n\nIn this post, we will go over some of these models and test them on a dataset.\n\n## Digit Span\n\nThe Digit Span is a verbal working memory test, part of the Wechsler Adult\nIntelligence Scale (WAIS) and Wechsler Memory Scale (WMS) supertests. In the\nDigit Span test, subjects must repeat lists of digits, either in the same or\nreversed order.\n\nThe dataset for the study is available... [@Hartshorne2015]\n\n> Participants in Experiment 2 (N = 10,394; age range = 10–69 years old) [...]\n> were visitors to TestMyBrain.org, who took part in experiments in order to\n> contribute to scientific research and in exchange for performance-related\n> feedback.3 We continued data collection for each experiment for approximately\n> 1 year, sufficient to obtain around 10,000 participants, which allowed fine-\n> grained age- of-peak-performance analysis.\n\nWe could control for other variables, such as the computer type (desk or laptop)\nor gender, but let's assume there are no confounding effects at play here.\n\n\n\n::: {#cell-mind-in-eyes-plot .cell execution_count=3}\n\n::: {.cell-output .cell-output-display execution_count=7}\n![](index_files/figure-html/mind-in-eyes-plot-output-1.png){#mind-in-eyes-plot width=599 height=445}\n:::\n:::\n\n\n## Empirical models\n\nPolynomials, smoothings, splines, etc.\n\n### Bootstrap\n\n> Estimates and standard errors for age of peak performance were calculated using\n> a bootstrap resam- pling procedure identical to the one used in Experiment 1\n> but applied to raw performance data. To dampen noise, we smoothed means for each\n> age using a moving 3-year window prior to identifying age of peak performance\n> in each sample. Other methods of dampening noise provide similar results. In\n> Experiment 2, age of peak performance was compared across tasks with paired t\n> tests. Within- participant data were not available in Experiment 3.\n\n::: {#cell-empirical-models-bootstrap .cell execution_count=4}\n\n::: {#empirical-models-bootstrap .cell-output .cell-output-display}\n```{=html}\n<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">shape: <span style=\"font-weight: bold\">(</span><span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">81</span>, <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">5</span><span style=\"font-weight: bold\">)</span>\n┌─────┬──────────┬──────┬──────────────┬────────────┐\n│ age ┆ mean     ┆ se   ┆ rolling_mean ┆ rolling_se │\n│ --- ┆ ---      ┆ ---  ┆ ---          ┆ ---        │\n│ i64 ┆ f64      ┆ f64  ┆ f64          ┆ f64        │\n╞═════╪══════════╪══════╪══════════════╪════════════╡\n│ <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">5</span>   ┆ <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">4.0</span>      ┆ null ┆ null         ┆ null       │\n│ <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">6</span>   ┆ <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">7.0</span>      ┆ null ┆ null         ┆ null       │\n│ <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">7</span>   ┆ <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">4.7501</span>   ┆ null ┆ <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">5.250033</span>     ┆ null       │\n│ <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">8</span>   ┆ <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">5.409251</span> ┆ null ┆ <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">5.719784</span>     ┆ null       │\n│ …   ┆ …        ┆ …    ┆ …            ┆ …          │\n│ <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">83</span>  ┆ <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">6.0</span>      ┆ null ┆ <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">6.333333</span>     ┆ null       │\n│ <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">85</span>  ┆ <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">4.494643</span> ┆ null ┆ <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">5.164881</span>     ┆ null       │\n│ <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">100</span> ┆ <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">4.523819</span> ┆ null ┆ <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">5.006154</span>     ┆ null       │\n│ <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">110</span> ┆ <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">6.141067</span> ┆ null ┆ <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">5.053176</span>     ┆ null       │\n└─────┴──────────┴──────┴──────────────┴────────────┘\n</pre>\n```\n:::\n:::\n\n\n### Gaussian Process\n\n## Decomposable models\n\nSome commenters on Andrew's blog...\n\nAll intervals are 80% credibility...\n\n$$\n\\begin{align}\ng(x) = g_1(x) + g_2(x) \\\\\ny \\sim \\mathrm{Normal}(g(x), \\sigma) \\\\\n\\sigma \\sim \\mathrm{HalfNormal}(1)\n\\end{align}\n$$\n\n\n### Additive\n\n$$\ng(x) = \\alpha_1 \\exp(-\\lambda_1 x) + \\alpha_2 + \\alpha_3 \\exp(\\lambda_2 x)\n$$\n\nWith priors:\n\n$$\n\\begin{align}\n\\alpha \\sim \\mathrm{Normal}(0, 2) \\\\\n\\lambda \\sim \\mathrm{HalfNormal}(0.01) \\\\\n\\end{align}\n$$\n\n::: {#cell-parametric-models-siler-prior-predictive .cell execution_count=5}\n\n::: {.cell-output .cell-output-display execution_count=9}\n![](index_files/figure-html/parametric-models-siler-prior-predictive-output-1.png){#parametric-models-siler-prior-predictive width=599 height=445}\n:::\n:::\n\n\n\n\n### Multiplicative\n\nMcElreath\n\n$$\ng(x) = \\exp(-ax) (1 - exp(-bx))^c\n$$\n\n## Comparison\n\nLet's compare using LOO...\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}